version: '3'

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py createsuperuser --no-input
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/web_cv
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    command: celery -A web_cv worker -l info
    volumes:
      - .:/web_cv
    depends_on:
      - rabbitmq
    environment:
      - C_FORCE_ROOT=1

volumes:
  db_data:
  rabbitmq_data:
